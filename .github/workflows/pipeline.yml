name: Pipeline
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          version: v1.39
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.3'
      - run: go test ./...
  # See: https://github.community/t/how-to-share-matrix-between-jobs/128595/8
  load-build-infos:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    outputs:
      goos: ${{ steps.set-goos.outputs.goos }}
      goarch: ${{ steps.set-goarch.outputs.goarch }}
    steps:
      - uses: actions/checkout@v2
      - id: set-goos
        run: |
          TASKS=$(echo $(cat .github/workflows/goos.json) | sed 's/ //g' )
          echo "::set-output name=goos::$TASKS"
      - id: set-goarch
        run: |
          TASKS=$(echo $(cat .github/workflows/goarch.json) | sed 's/ //g' )
          echo "::set-output name=goarch::$TASKS"
  build:
    runs-on: ubuntu-latest
    needs: load-build-infos
    strategy:
      matrix:
        goos: ${{ fromJson(needs.load-build-infos.outputs.goos) }}
        goarch: ${{ fromJson(needs.load-build-infos.outputs.goarch) }}
    steps:
      - uses: actions/checkout@v2
      - id: artefact-name
        run: echo "::set-output name=artefact-name::eve-industry-${{ matrix.goos }}-${{ matrix.goarch }}"
      - run: go build -o ${{ steps.artefact-name.outputs.artefact-name }} ./...
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.goos != 'windows' }}
        with:
          name: ${{ steps.artefact-name.outputs.artefact-name }}
          path: ${{ steps.artefact-name.outputs.artefact-name }}
          retention-days: 5
  release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
      - uses: actions/download-artifact@v2
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          files: eve-industry-**/*